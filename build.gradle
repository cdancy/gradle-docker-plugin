group = 'com.bmuschko'
version = '4.0.1'

apply plugin: 'groovy'
apply plugin: 'idea'
apply from: "$rootDir/gradle/dependencies.gradle"
apply from: "$rootDir/gradle/test-setup.gradle"
apply from: "$rootDir/gradle/integration-test.gradle"
apply from: "$rootDir/gradle/functional-test.gradle"
apply from: "$rootDir/gradle/additional-artifacts.gradle"
apply from: "$rootDir/gradle/publishing.gradle"
apply from: "$rootDir/gradle/documentation.gradle"
apply from: "$rootDir/gradle/release.gradle"
apply plugin: 'com.jfrog.artifactory'


repositories {
    jcenter()
    mavenCentral()
    maven { url "${artifactoryURL}/repo" }
}

buildscript() {
    repositories {
        jcenter()
        mavenCentral()
        maven { url "${artifactoryURL}/repo" }
    }
    dependencies {
        classpath "org.jfrog.buildinfo:build-info-extractor-gradle:3.1.1"
    }
}

dependencies {
    compile localGroovy()
    compile gradleApi()
    testCompile('org.spockframework:spock-core:1.0-groovy-2.4') {
        exclude module: 'groovy-all'
    }
}

ext.compatibilityVersion = '1.6'
sourceCompatibility = compatibilityVersion
targetCompatibility = compatibilityVersion

jar {
    manifest {
        attributes 'Implementation-Title': 'Gradle Docker plugin',
                   'Implementation-Version': version,
                   'Built-By': System.getProperty('user.name'),
                   'Built-Date': new Date(),
                   'Built-JDK': System.getProperty('java.version'),
                   'Built-Gradle': gradle.gradleVersion
    }
}

idea.project {
    jdkName = '1.8'
    languageLevel = compatibilityVersion

    ipr.withXml { provider ->
        def node = provider.asNode()

        // Use GIT
        def vcsConfig = node.component.find { it.'@name' == 'VcsDirectoryMappings' }
        vcsConfig.mapping[0].'@vcs' = 'Git'

        // Set Gradle home
        def gradleSettings = node.appendNode('component', [name: 'GradleSettings'])
        gradleSettings.appendNode('option', [name: 'SDK_HOME', value: gradle.gradleHomeDir])
    }
}

artifactory {
    contextUrl = artifactoryURL
    publish {
        repository {
            repoKey = version.endsWith('-SNAPSHOT') ? snapshotRepository : releaseRepository
            username = artifactoryUser
            password = artifactoryPassword
            maven = true
        }
        defaults {
            publications ('artifactoryJava')
        }
    }
}

publishing {
    publications {
        artifactoryJava (MavenPublication) {
            from components.java
        }
    }
}
